apiVersion: v1
kind: Service
metadata:
  name: upf-2
spec:
  selector:
    open5gs: upf-2
  ports:
    - name: pfcp
      port: 8805
      targetPort: 8805
    - name: gtpu
      port: 2152
      targetPort: 2152
    - name: "4000"
      port: 4000
      targetPort: 4000
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: upf-2
    labels:
        open5gs: upf-2
spec:
    replicas: 1
    selector:
        matchLabels:
            open5gs: upf-2
    template:
        metadata:
            labels:
                open5gs: upf-2
        spec:
            hostname: upf
            subdomain: localhost
            containers:
              - name: upf
                image: bertl4398/open5gs
                # image: open5gs
                imagePullPolicy: Always
                ports:
                  - name: pfcp
                    containerPort: 8805
                  - name: gtpu
                    containerPort: 2152
                env:
                  - name: POD_IP
                    valueFrom:
                      fieldRef:
                        fieldPath: status.podIP
                command: ["/bin/sh", "-c"]
                args: ["python3 init.py upf 2 && /5gs/bin/open5gs-upfd"]
                lifecycle:
                  postStart:
                    exec:
                      command: ["/bin/sh", "-c", "sleep 10 && ip link set ogstun up && ip addr add 10.45.0.12/16 dev ogstun"]
                securityContext:
                  privileged: true
                  capabilities:
                    add:
                      - NET_ADMIN
                volumeMounts:
                  - mountPath: /dev/net/tun
                    name: dev-net-tun
              - name: scheduler
                image: byrnedo/alpine-curl:latest
                env:
                  - name: POLLING_TIME
                    value: "3s"
                command: ["/bin/sh", "-c"]
                args: ["/root/scheduler.sh"]
                volumeMounts:
                - name: scheduler
                  mountPath: /root/scheduler.sh
                  subPath: scheduler.sh
              - image: docker.elastic.co/logstash/logstash:7.8.0
                name: logstash
                resources: {}
                volumeMounts:
                - name: pipelines
                  mountPath: /usr/share/logstash/pipeline
                - name: config
                  mountPath: /usr/share/logstash/config/logstash.yml
                  subPath: logstash.yml
                - name: pipelines-config
                  mountPath: /usr/share/logstash/config/pipelines.yml
                  subPath: pipelines.yml
                securityContext:
                  runAsUser: 0
              - image: polycubenetwork/polycube:latest
                name: polycube
                command: ["/bin/bash", "-c"] 
                args: ["whoami; polycubed"]
                resources: {}
                volumeMounts:
                - name: etc-localtime
                  mountPath: /etc/localtime
                  readOnly: true
                - name: lib-modules
                  mountPath: /lib/modules
                  readOnly: true
                - name: usr-src
                  mountPath: /usr/src
                  readOnly: true
                - name: dev-net-tun
                  mountPath: /dev/net/tun
                  readOnly: true
                securityContext:
                  capabilities:
                    add:
                    - all
              - image: astridproject/lcp:master
                name: lcp
                env:
                  - name: LCP_HOST
                    value: "0.0.0.0"
                  - name: LCP_PORT
                    value: "5000"
                  - name: LCP_HTTPS
                    value: "false"
                  - name: LCP_AUTH_ENABLED
                    value: "true"
                  - name: LCP_AUTH_HEADER_PREFIX
                    value: "ASTRID"
                  - name: LCP_AUTH_SECRET_KEY
                    value: "astrid-secret-key"
                  - name: LCP_ELASTIC_APM_ENABLED
                    value: "false"
                  - name: LCP_ELASTIC_APM_SERVER
                    value: "http://localhost:8200"
                  - name: LCP_POLYCUBE_HOST
                    value: "localhost"
                  - name: LCP_POLYCUBE_PORT
                    value: "9000"
                  - name: LCP_POLYCUBE_TIMEOUT
                    value: "20s"
                  - name: LCP_LOG_CONFIG
                    value: "log.yaml"
                volumeMounts:
                - name: pipelines
                  mountPath: /usr/share/logstash/pipeline
            initContainers:
            - image: byrnedo/alpine-curl:latest
              name: copy-files
              command: ['sh', '-c', 'if ! [ "$(ls -A /usr/share/logstash/pipeline)" ]; then cp /usr/share/logstash/tmp/pipeline/* /usr/share/logstash/pipeline/ ; fi;']
              volumeMounts:
              - name: tmp-pipelines
                mountPath: /usr/share/logstash/tmp/pipeline
                #mountPath: /usr/share/logstash/pipeline
              - name: pipelines
                mountPath: /usr/share/logstash/pipeline
            volumes:
              - name: dev-net-tun
                hostPath:
                  path: /dev/net/tun
              - name: tmp-pipelines
                configMap:
                  name: upf-2-configmap
                  items:
                    - key: polycube_bau.conf
                      path: polycube_bau.conf
                    - key: polycube_bau_and_warn.conf
                      path: polycube_bau_and_warn.conf
                    - key: polycube_dns_bau.conf
                      path: polycube_dns_bau.conf
                    - key: polycube_dns_warn.conf
                      path: polycube_dns_warn.conf
              - name: pipelines
                persistentVolumeClaim:
                  claimName: upf-2-pv-claim 
              - name: config
                configMap:
                  name: upf-2-configmap
                  defaultMode: 0666
                  items:
                    - key: logstash.yml
                      path: logstash.yml
              - name: pipelines-config
                configMap:
                  name: upf-2-configmap
                  defaultMode: 0666
                  items:
                    - key: pipelines.yml
                      path: pipelines.yml
              - name: scheduler
                configMap:
                  name: upf-2-configmap
                  defaultMode: 0777
                  items:
                    - key: scheduler.sh
                      path: scheduler.sh
              - name: lib-modules
                hostPath:
                  path: /lib/modules
              - name: usr-src
                hostPath:
                  path: /usr/src
              - name: etc-localtime
                hostPath:
                  path: /etc/localtime